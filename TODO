Projects:
  ☐ Anything with a colon at the end of the line is a project title
  ☐ You can nest projects inside each other
  Nested:
    ☐ You can fold projects

Todos:
  You can write plain text as notes or descriptions wherever you want
  New:
    ☐ Press Cmd/Ctrl+Enter to add a new todo
  Done:
    ✔ Press Alt+D to mark a todo as done
    ✔ Press it again to undo the action
  Cancel:
    ✘ Press Alt+C to mark a todo as cancelled
    ✘ Press it again to undo the action
  Tagging:
    ☐ You can add tags using the @ sign, like this @tag
    ☐ There are some special, customizable tags: @critical @high @low @today
  Timekeeping:
    ✔ Completed todos can show a timestamp @done(17-11-03 10:42)
    ☐ Press Alt+S to mark a todo as started @started(17-11-03 10:42)
      ✔ Now it will show the elapsed time @started(17-11-03 10:42) @done(17-11-03 20:11) @lasted(9 hours 29 minutes)

Style:
  We support a markdown-like syntax for styling text
  Bold:
    ☐ Use asterisks for *bold*
  Italic:
    ☐ Use underscores for _italic_
  Strikethrough:
    ☐ Use tildes for ~strikethrough~

Code:
  ☐ You can embed custom `code` pretty much anywhere
  ☐ Even ```
      multi-line
      code blocks
      are supported
    ```

'Cmd/Ctrl+Shift+A' // Triggers  `Todo: Archive`
'Cmd/Ctrl+Enter' // Triggers `Todo: Toggle Box`
'Alt+D' // Triggers `Todo: Toggle Done`
'Alt+C' // Triggers `Todo: Toggle Cancel`
'Alt+S' // Triggers `Todo: Start`


Todo:
  Task1:
    ✔ комменты с гитхаба @done(18-02-20 02:22)
    ✔ стоит ли писать пустые onInit ? @done(18-02-20 02:22)
  Task2:
  ✔ Разобраться с модулями - почему в app.module нужно указывать конкретные компоненты и нельзя ли модули в которых они объявлены @done(18-02-20 02:22)
       ``` import { HomeComponent } from './home/home.component';
        import { NavBarModule } from './navbar/navbar.module';

        export const routeList: Routes = [
          {path: '', component: HomeComponent},```


  ✔ убрать папку shop @done(18-02-20 02:22)
  ✔ сделать пример с HostBinding @done(18-02-20 02:22)
  ✔ переделать ViewChild по примеру с лекции @done(18-01-31 00:23)
   ✔ @ViewChild('name') возвращает ElementRef. работает с #name из темплэйта этого же компонента ? почесу тогда ViewChild ? @done(18-01-31 00:23)
   ✔ @ViewChild(ComponentClass) достает ComponentClass и дает возможность выцзвать метод @done(18-01-31 00:23)
  Task3:
    ☐ localStorage ```//создадим объект
    var obj = {
      item1: 1,
      item2: [123, "two", 3.0],
      item3:"hello"
    };
    var serialObj = JSON.stringify(obj); //сериализуем его
    localStorage.setItem("myKey", serialObj); //запишем его в хранилище по ключу "myKey"
    var returnObj = JSON.parse(localStorage.getItem("myKey")) //спарсим его обратно объект```
  Current:
    ✔ сделать add  @done(18-02-20 21:37)
    ✘ pipe - сортировка @cancelled(18-02-22 02:16)
    ✔ $ в ценах @done(18-02-20 21:46)
    ✔ админка - табы @done(18-02-20 23:35)
    ☐ видео - что с сессией - пересмотреть
    ✔ гард на админку @done(18-02-21 00:11)
    ✔ кнопка info на список продуктов @done(18-02-21 01:48)
    ✔ баг с количеством @done(18-02-21 00:31)
    ✔ англ язык @done(18-02-21 00:16)
    ✘ гард на save для продукта @cancelled(18-02-20 23:35)
    ✘ диалог на подтверждение ??? @cancelled(18-02-20 23:35)
    ☐ вопросы виталию - пайпы, 
    ✔ кнопка корзины @done(18-02-21 01:59)
    ✔ модуль заказа со стороны юзера @done(18-02-22 01:48)
    ✔ order-item  - компонент для отображения заказа в админском листе - id адрес сумма телефон кнопки удалить и подтвердить посмотреть @done(18-02-22 22:38)
    ✔ order-list - список заказов. есть кнопка назад @done(18-02-22 22:38)
    ☐ сумму записать в заказ
  

